#!/bin/bash python3 

import os

# Assign wildcard sample names
configfile: "task_samples.yaml"

# Assign wildcard constraints
wildcard_constraints:
    sample='[a-zA-Z0-9]+'

rule all:
    input:         
        expand("03_screened/{sample}_1_val_1_screen.bisulfite_orientation.png", sample=config["samples"])

rule make_directories:
    message: "Making directories for data organization"
    output: 
        directory("00_time_logs/"),
        directory("00_std_err_logs/"),
        directory("02_trimmed/"),
        directory("03_screened/")
    shell: """
    mkdir 00_time_logs
    mkdir 00_std_err_logs
    mkdir 02_trimmed
    mkdir 03_screened
    """
    
'''
rule trim:
    message: "Trimming samples"
    input:
        r1 = "01_raw_sequences/{sample}_1.fq.gz",
        r2 = "01_raw_sequences/{sample}_2.fq.gz"
    output:
        out1 = "02_trimmed/{sample}_1.fq.gz_trimming_report.txt",
        out2 = "02_trimmed/{sample}_1_val_1_fastqc.html",
        out3 = "02_trimmed/{sample}_1_val_1_fastqc.zip",
        out4 = "02_trimmed/{sample}_1_val_1.fq.gz",
        out5 = "02_trimmed/{sample}_2.fq.gz_trimming_report.txt",
        out6 = "02_trimmed/{sample}_2_val_2_fastqc.html",
        out7 = "02_trimmed/{sample}_2_val_2_fastqc.zip",
        out8 = "02_trimmed/{sample}_2_val_2.fq.gz"
    log: "00_std_err_logs/02_trimmed_{sample}.log"
    benchmark: "00_time_logs/02_trimmed_{sample}.txt"
    threads: 1
    shell: "trim_galore --paired --cores {threads} --2colour 20 --fastqc --clip_r1 10 --clip_r2 20 --three_prime_clip_r1 10 --three_prime_clip_r2 10 --output_dir 02_trimmed/ {input.r1} {input.r2} 2> {log}"
'''

rule screen:
    message: "Screening samples for sample origin"
    input:
        conf = "00_software/fastq_screen.conf",
        r1 = "02_trimmed/{sample}_1_val_1.fq.gz",
        r2 = "02_trimmed/{sample}_2_val_2.fq.gz"
    output: 
        out1 = "03_screened/{sample}_1_val_1_screen.bisulfite_orientation.png",
        out2 = "03_screened/{sample}_1_val_1_screen.html",
        out3 = "03_screened/{sample}_1_val_1_screen.png",
        out4 = "03_screened/{sample}_1_val_1_screen.txt"
    log: "00_std_err_logs/03_screened_{sample}.log"
    benchmark: "00_time_logs/03_screened_{sample}.txt"
    shell: """
    fastq_screen --conf {input.conf} --bisulfite {input.r1} {input.r1} > 03_screened/ 2> {log}
    """ 

'''    
rule align:
    message: "Align bisfulite reads"
    input:
        r1 = "02_trimmed/{sample}_1_val_1.fq.gz",
        r2 = "02_trimmed/{sample}_2_val_2.fq.gz"
    output:
    shell: "bismark -n 1 --genome /share/lasallelab/genomes/{wildcards.genome}/ --multicore 6 -1 {input.r1} -2 {input.r2}"
    
rule deduplicate:
    message: "Removing PCR duplicates"
    input:
    output:
    shell: "deduplicate_bismark --bam --paired ${BAM}"
'''

# Insert Size Metrics

# Nucleotide Coverage

# Extract Methylation

# Cytosine and QC Reports